name: TinyFileSentry Build and Test

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:

  build:

    runs-on: windows-latest

    env:
      Solution_Directory: TinyFileSentry
      Test_Project_Path: TinyFileSentry.Tests/TinyFileSentry.Tests.csproj
      App_Project_Path: TinyFileSentry.App/TinyFileSentry.App.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Extract version from tag
    - name: Extract version from tag
      id: version
      run: |
        $tag = "${{ github.ref_name }}"
        $version = $tag -replace '^v', ''
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        echo "Extracted version: $version"

    # Install the .NET workload
    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    # Update version in project files
    - name: Update version in project files
      run: |
        $version = "${{ steps.version.outputs.VERSION }}"
        echo "Updating version to: $version"
        
        # Update Directory.Build.props
        $content = Get-Content "Directory.Build.props" -Raw
        $content = $content -replace '<Version>.*</Version>', "<Version>$version</Version>"
        $content = $content -replace '<AssemblyVersion>.*</AssemblyVersion>', "<AssemblyVersion>$version.0</AssemblyVersion>"
        $content = $content -replace '<FileVersion>.*</FileVersion>', "<FileVersion>$version.0</FileVersion>"
        Set-Content "Directory.Build.props" -Value $content
        
        echo "Updated Directory.Build.props:"
        Get-Content "Directory.Build.props"

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore

    # Build the solution
    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    # Execute unit tests
    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal

    # Publish the application
    - name: Publish application
      run: dotnet publish $env:App_Project_Path -c Release -r win-x64 -o ./publish

    # Install WiX v4 CLI
    - name: Install WiX v4 CLI
      run: |
        dotnet tool install --global wix --version 4.0.0
        wix --version

    # Create MSI installer
    - name: Create MSI installer
      run: |
        # List files in publish directory for debugging
        Write-Host "Files in publish directory:"
        Get-ChildItem -Path ./publish -Recurse | Format-Table Name, FullName
        
        # Copy icon file for WiX
        Copy-Item "TinyFileSentry.App/Resources/Icons/app-icon.ico" -Destination "app-icon.ico"
        
        # Create comprehensive WiX source file with all files
        $wxsContent = @"
        <?xml version="1.0" encoding="UTF-8"?>
        <Wix xmlns="http://wixtoolset.org/schemas/v4/wxs">
          <Package Name="TinyFileSentry" Version="${{ steps.version.outputs.VERSION }}" Manufacturer="TinyFileSentry" UpgradeCode="12345678-1234-1234-1234-123456789012">
            <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />
            <MediaTemplate EmbedCab="yes" />
            
            <Icon Id="AppIcon.ico" SourceFile="app-icon.ico" />
            <Property Id="ARPPRODUCTICON" Value="AppIcon.ico" />
            
            <Feature Id="ProductFeature" Title="TinyFileSentry" Level="1">
              <ComponentGroupRef Id="ProductComponents" />
            </Feature>
          </Package>
          
          <Fragment>
            <Directory Id="TARGETDIR" Name="SourceDir">
              <Directory Id="ProgramFilesFolder">
                <Directory Id="INSTALLFOLDER" Name="TinyFileSentry" />
              </Directory>
              <Directory Id="DesktopFolder" Name="Desktop" />
            </Directory>
          </Fragment>
          
          <Fragment>
            <ComponentGroup Id="ProductComponents" Directory="INSTALLFOLDER">
              <!-- Registry component for Add/Remove Programs icon -->
              <Component Id="RegistryComponent" Guid="*">
                <RegistryValue Root="HKLM" Key="SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\[ProductCode]"
                               Name="DisplayIcon" Value="[INSTALLFOLDER]TinyFileSentry.App.exe" Type="string" />
              </Component>
              <!-- Desktop shortcut component -->
              <Component Id="DesktopShortcutComponent" Guid="*" Directory="DesktopFolder">
                <Shortcut Id="DesktopShortcut" 
                          Name="TinyFileSentry" 
                          Description="TinyFileSentry - File monitoring and backup utility"
                          Target="[INSTALLFOLDER]TinyFileSentry.App.exe" 
                          WorkingDirectory="INSTALLFOLDER"
                          Icon="AppIcon.ico" />
                <RemoveFolder Id="DesktopFolderRemove" Directory="DesktopFolder" On="uninstall" />
                <RegistryValue Root="HKCU" Key="Software\TinyFileSentry" Name="DesktopShortcut" Type="integer" Value="1" KeyPath="yes" />
              </Component>
        "@
        
        # Add all files from publish directory - each file in separate component
        $files = Get-ChildItem -Path ./publish -File
        foreach ($file in $files) {
          $fileId = $file.Name.Replace(".", "").Replace("-", "")
          $componentId = "Component_$fileId"
          $wxsContent += "        <Component Id=""$componentId"" Guid=""*"">`n"
          $wxsContent += "          <File Id=""$fileId"" Source=""./publish/$($file.Name)"" />`n"
          $wxsContent += "        </Component>`n"
        }
        
        $wxsContent += @"
            </ComponentGroup>
          </Fragment>
        </Wix>
        "@
        
        $wxsContent | Out-File -FilePath "TinyFileSentry.wxs" -Encoding UTF8
        
        # Show generated WXS for debugging
        Write-Host "Generated WXS content:"
        Get-Content TinyFileSentry.wxs
        
        # Build MSI
        wix build TinyFileSentry.wxs -out TinyFileSentry.msi

    # Create GitHub Release
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## TinyFileSentry Release ${{ github.ref_name }}
          
          Automatically generated release from tag ${{ github.ref_name }}.
          
          ### Installation
          Download and run TinyFileSentry.msi
          
          ### Version
          ${{ steps.version.outputs.VERSION }}
        files: |
          TinyFileSentry.msi
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
